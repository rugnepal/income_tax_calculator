{
    "type": [
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "Error in get(\"2078/79\", 2) : object 'type' not found\n",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- year",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- year",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = year)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = year)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = year)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(x,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "Error in switch(x, y2078_79 = single_2078_79, y2079_80 = single_2079_80,  : \n  EXPR must be a length 1 vector\n",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = year)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(bracket,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "Error in switch(bracket, y2078_79 = single_2078_79, y2079_80 = single_2079_80,  : \n  EXPR must be a length 1 vector\n",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = year)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "> ",
        "get <- function(year, ssf) {",
        "+ ",
        "  ",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "# type <- ifelse(ssf !=0, paste0(year, ssf), paste0(year))",
        "+ ",
        "",
        "+ ",
        "type <- paste0(year, ssf)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "bracket <- list(y2078_79 = \"2078/79\", y2079_80 = \"2079/80\", ssfy2078_79 = type)",
        "+ ",
        "",
        "+ ",
        "# if(type == \"2078/79\" & ssf > 0) type <- sit[1]",
        "+ ",
        "# else if ",
        "+ ",
        "",
        "+ ",
        "with(bracket, switch(type,",
        "+ ",
        "                     y2078_79 = single_2078_79,",
        "+ ",
        "                     y2079_80 = single_2079_80,",
        "+ ",
        "                     ssfy2078_79 = single_2078_79_ssf)",
        "+ ",
        ")",
        "+ ",
        "",
        "+ ",
        "bracket",
        "+ ",
        "# ",
        "+ ",
        "# type",
        "+ ",
        "# bracket",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "get(\"2078/79\", 2)",
        "$y2078_79\n[1] \"2078/79\"\n\n$y2079_80\n[1] \"2079/80\"\n\n$ssfy2078_79\n[1] \"2078/792\"\n\n",
        "> ",
        "with(bracket)",
        "Error in eval(substitute(expr), data, enclos = parent.frame()) : \n  argument is missing, with no default\n",
        "> ",
        "with(bracket, y2078_79)",
        "[1] \"2078/79\"\n",
        "> ",
        "bracket",
        "$y2078_79\n[1] \"2078/79\"\n\n$y2079_80\n[1] \"2079/80\"\n\n$ssfy2078_79\n[1] \"2078/79_ssf\"\n\n",
        "> ",
        "names(bracket)",
        "[1] \"y2078_79\"    \"y2079_80\"   \n[3] \"ssfy2078_79\"\n",
        "> ",
        "bracket[[]]",
        "NULL\n",
        "> ",
        "bracket[]",
        "$y2078_79\n[1] \"2078/79\"\n\n$y2079_80\n[1] \"2079/80\"\n\n$ssfy2078_79\n[1] \"2078/79_ssf\"\n\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean1 = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(x,",
        "+ ",
        "                    mean1 = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "  # sit",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean1 = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean1 = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "  # sit",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean1 = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "  # sit",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "  # sit",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "  # sit",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  ",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  x <- paste0(type, 1)",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] NA\n",
        "Warning message:\n",
        "In mean.default(x) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  # x <- paste0(type, 1)",
        "+ ",
        "  sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] 0.5081232\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  # x <- paste0(type, 1)",
        "+ ",
        "  # sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] 0.5081232\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  # x <- paste0(type, 1)",
        "+ ",
        "  # sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] 0.5081232\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  # x <- paste0(type, 1)",
        "+ ",
        "  # sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] 0.5081232\n",
        "> ",
        "centre <- function(x, type) {",
        "+ ",
        "  # x <- paste0(type, 1)",
        "+ ",
        "  # sit <- list(mean = x, median = \"median\", trimmed = \"trimmed\")",
        "+ ",
        "  with( sit, switch(type,",
        "+ ",
        "                    mean = mean(x),",
        "+ ",
        "                    median = median(x),",
        "+ ",
        "                    trimmed = mean(x, trim = .1)))",
        "+ ",
        "}",
        "> ",
        "centre(x, \"mean\")",
        "[1] 0.5081232\n",
        "> ",
        "centre(x, \"median\")",
        "[1] -0.04375328\n",
        "> ",
        "",
        "\nRestarting R session...\n\n"
    ]
}